let ADMINSTRATORS,ADMIN_HASH,CONTACT_MESSAGES,GLOBALS,USERS,USERS_HASH,remove_image,remove_video,save_image,save_video,GLOBAL_best_instructor_stuffs,GLOBAL_onboarding_stuffs;_d0f‍.x([["remove_subscriber",()=>remove_subscriber],["create_default_admin",()=>create_default_admin],["subscribe_newsletter",()=>subscribe_newsletter],["contact_messages",()=>contact_messages],["new_contact_message",()=>new_contact_message],["newsletter_subscribers",()=>newsletter_subscribers],["remove_contact_messages",()=>remove_contact_messages],["contact_message_seen",()=>contact_message_seen],["entry",()=>entry],["update_banner_image",()=>update_banner_image],["update_banner_video",()=>update_banner_video],["GLOBAL_banner_stuffs",()=>GLOBAL_banner_stuffs],["GLOBAL_newsletter",()=>GLOBAL_newsletter]]);_d0f‍.w("../ds/conn",[["ADMINSTRATORS",["ADMINSTRATORS"],function(v){ADMINSTRATORS=v}],["ADMIN_HASH",["ADMIN_HASH"],function(v){ADMIN_HASH=v}],["CONTACT_MESSAGES",["CONTACT_MESSAGES"],function(v){CONTACT_MESSAGES=v}],["GLOBALS",["GLOBALS"],function(v){GLOBALS=v}],["USERS",["USERS"],function(v){USERS=v}],["USERS_HASH",["USERS_HASH"],function(v){USERS_HASH=v}]]);_d0f‍.w("./courses",[["remove_image",["remove_image"],function(v){remove_image=v}],["remove_video",["remove_video"],function(v){remove_video=v}],["save_image",["save_image"],function(v){save_image=v}],["save_video",["save_video"],function(v){save_video=v}]]);_d0f‍.w("./sections",[["GLOBAL_best_instructor_stuffs",["GLOBAL_best_instructor_stuffs"],function(v){GLOBAL_best_instructor_stuffs=v}],["GLOBAL_onboarding_stuffs",["GLOBAL_onboarding_stuffs"],function(v){GLOBAL_onboarding_stuffs=v}]]);













let default_admin = "adminstrators~123neovacity~1234567890123",
  default_user = "users~123neovacity~1234567890123";

const GLOBAL_newsletter = "newsletter",
  GLOBAL_unseen_messages = "contact_messages";

const create_default_admin = () => {
  if (!_d0f‍.a("ADMINSTRATORS",ADMINSTRATORS).readone(default_admin)) {
    _d0f‍.a("ADMINSTRATORS",ADMINSTRATORS).write({
      firstname: "Neovacity",
      lastname: "Africa",
      image: "logo_single.png",
      email: "admin@neovacity.com",
      _id: default_admin,
    });
    _d0f‍.a("ADMIN_HASH",ADMIN_HASH).write({ admin: default_admin, key: "adminstrator#1" });
  }

  if (!_d0f‍.a("USERS",USERS).readone(default_user)) {
    _d0f‍.a("USERS",USERS).write({
      _id: default_user,
      firstname: "Neovacity",
      lastname: "Africa",
      verified: true,
      email: "neovacityafrica@gmail.com",
    });
    _d0f‍.a("USERS_HASH",USERS_HASH).write({ user: default_user, key: "adminstrator#1" });
  }
};

const subscribe_newsletter = (req, res) => {
  let { email } = req.body;
  if (email && typeof email === "string") {
    email = email.trim().toLowerCase();
    if (_d0f‍.a("GLOBALS",GLOBALS).readone({ global: GLOBAL_newsletter }))
      _d0f‍.a("GLOBALS",GLOBALS).update(
        { global: GLOBAL_newsletter },
        { subscribers: { $set: email } }
      );
    else {
      _d0f‍.a("GLOBALS",GLOBALS).write({
        global: GLOBAL_newsletter,
        subscribers: new Array(email),
      });
    }
  }

  res.end();
};

const remove_subscriber = (req, res) => {
  let { email } = req.body;

  email &&
    typeof email === "string" &&
    _d0f‍.a("GLOBALS",GLOBALS).update(
      { global: GLOBAL_newsletter },
      { subscribers: { $splice: email.trim().toLowerCase() } }
    );

  res.end();
};

const newsletter_subscribers = (req, res) => {
  let subscribers = _d0f‍.a("GLOBALS",GLOBALS).readone({ global: GLOBAL_newsletter });
  res.json({
    ok: true,
    message: "newsletter subscribers",
    data: subscribers ? subscribers.subscribers : new Array(),
  });
};

const contact_messages = (req, res) => {
  let { seen } = req.body || new Object();

  let msgs = (
      _d0f‍.a("GLOBALS",GLOBALS).read({ global: GLOBAL_unseen_messages }) || {
        messages: new Array(),
      }
    ).messages,
    messages;
  messages = seen
    ? _d0f‍.a("CONTACT_MESSAGES",CONTACT_MESSAGES).read({ _id: { $ne: msgs } })
    : _d0f‍.a("CONTACT_MESSAGES",CONTACT_MESSAGES).read(msgs);

  res.json({ ok: true, message: "contact messages fetched", data: messages });
};

const remove_contact_messages = (req, res) => {
  let { message } = req.params;

  _d0f‍.a("CONTACT_MESSAGES",CONTACT_MESSAGES).remove(message);
  res.end();
};

const contact_message_seen = (req, res) => {
  let { message } = req.params;

  _d0f‍.a("GLOBALS",GLOBALS).update(
    { global: GLOBAL_unseen_messages },
    { messages: { $splice: message } }
  );
  _d0f‍.a("CONTACT_MESSAGES",CONTACT_MESSAGES).update(message, { seen: true });

  res.end();
};

const new_contact_message = (req, res) => {
  let message = req.body;

  let result = _d0f‍.a("CONTACT_MESSAGES",CONTACT_MESSAGES).write(message);
  if (_d0f‍.a("GLOBALS",GLOBALS).readone({ global: GLOBAL_unseen_messages }))
    _d0f‍.a("GLOBALS",GLOBALS).update(
      { global: GLOBAL_unseen_messages },
      { messages: { $push: result._id } }
    );
  else
    _d0f‍.a("GLOBALS",GLOBALS).write({
      global: GLOBAL_unseen_messages,
      messages: new Array(result._id),
    });

  res.end();
};

const GLOBAL_banner_stuffs = "banner_stuffs";

const update_banner_video = (req, res) => {
  let { video, thumbnail, thumbnail_hash } = req.body;

  let initial_thumbnail = thumbnail;
  video = _d0f‍.a("save_video",save_video)(video);
  thumbnail = _d0f‍.a("save_image",save_image)(thumbnail);

  let banner_vid = _d0f‍.a("GLOBALS",GLOBALS).readone({ global: GLOBAL_banner_stuffs });
  banner_vid &&
    (initial_thumbnail.startsWith("data") && _d0f‍.a("remove_image",remove_image)(banner_vid.thumbnail),
    _d0f‍.a("remove_video",remove_video)(banner_vid.video));

  if (
    !_d0f‍.a("GLOBALS",GLOBALS).update(
      { global: GLOBAL_banner_stuffs },
      { video, thumbnail, thumbnail_hash }
    )
  )
    _d0f‍.a("GLOBALS",GLOBALS).write({
      global: GLOBAL_banner_stuffs,
      video,
      thumbnail,
      thumbnail_hash,
    });

  res.json({
    ok: true,
    message: "banner video updated",
    data: { video, thumbnail },
  });
};

const update_banner_image = (req, res) => {
  let { image } = req.body;

  try {
    _d0f‍.a("remove_image",remove_image)("neovacity_africa_banner_background_image.jpg");
  } catch (e) {}

  image = _d0f‍.a("save_image",save_image)(image, "banner_background_image");

  if (!_d0f‍.a("GLOBALS",GLOBALS).update({ global: GLOBAL_banner_stuffs }, { image }))
    _d0f‍.a("GLOBALS",GLOBALS).write({ global: GLOBAL_banner_stuffs, image });

  res.json({ ok: true, message: "banner image updated", data: { image } });
};

const entry = (req, res) => {
  let banner_stuffs = _d0f‍.a("GLOBALS",GLOBALS).readone({ global: GLOBAL_banner_stuffs });
  let onboarding_stuffs = _d0f‍.a("GLOBALS",GLOBALS).readone({ global: GLOBAL_onboarding_stuffs });
  let best_instructors_stuffs = _d0f‍.a("GLOBALS",GLOBALS).readone({
    global: GLOBAL_best_instructor_stuffs,
  });

  res.json({
    ok: true,
    message: "entry stuffs",
    data: {
      banner_stuffs,
      onboarding_stuffs,
      best_instructors_stuffs,
    },
  });
};















;_d0f‍.j(["remove_subscriber","create_default_admin","subscribe_newsletter","contact_messages","new_contact_message","newsletter_subscribers","remove_contact_messages","contact_message_seen","entry","update_banner_image","update_banner_video","GLOBAL_banner_stuffs","GLOBAL_newsletter"]);
